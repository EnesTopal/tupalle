spring.application.name=tupalle
spring.datasource.url=jdbc:mysql://localhost:3306/Tupalle
spring.datasource.username=root
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQLDialect

management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

spring.data.redis.host=localhost
spring.data.redis.port=6379

# --- Spring Session ---
spring.session.store-type=redis
spring.session.redis.namespace=tupalle:sessions
server.servlet.session.timeout=2h

# --- Server Configuration ---
server.port=18089

# --- CORS (React dev for example) ---
app.cors.allowed-origins=http://localhost:5173,http://localhost:3000,https://vjxd31fv-3000.euw.devtunnels.ms

# --- AWS S3 Configuration ---
aws.s3.bucket-name=tupalle-images
aws.s3.region=eu-central-1
aws.s3.access-key=${AWS_S3_ACCESS_KEY}
aws.s3.secret-key=${AWS_S3_SECRET_KEY}
aws.s3.endpoint-url=${AWS_S3_ENDPOINT:}

# --- AWS SES Configuration ---
aws.ses.access-key=${AWS_S3_ACCESS_KEY}
aws.ses.secret-key=${AWS_S3_SECRET_KEY}
aws.ses.region=eu-central-1
aws.ses.from-email=tupalle.sup34@gmail.com

# --- Google OAuth2 Configuration ---
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:3000/auth/google/callback

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub