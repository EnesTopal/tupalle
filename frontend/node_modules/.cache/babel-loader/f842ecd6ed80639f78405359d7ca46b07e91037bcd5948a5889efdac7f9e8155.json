{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\enest\\\\IdeaProjects\\\\tupalle\\\\src\\\\hooks\\\\useAuth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authApi } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const response = await authApi.getCurrentUser();\n      if (response.success && response.username) {\n        setUser(response.username);\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      const response = await authApi.login({\n        username,\n        password\n      });\n      if (response.success) {\n        setUser(response.username);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Login failed:', error);\n      return false;\n    }\n  };\n  const register = async (username, password) => {\n    try {\n      const response = await authApi.register({\n        username,\n        password\n      });\n      if (response.success) {\n        setUser(response.username);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Registration failed:', error);\n      return false;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authApi.logout();\n    } catch (error) {\n      console.error('Logout failed:', error);\n    } finally {\n      setUser(null);\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authApi","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isLoading","setIsLoading","checkAuthStatus","response","getCurrentUser","success","username","error","console","login","password","register","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/enest/IdeaProjects/tupalle/src/hooks/useAuth.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { authApi, AuthResponse } from '../services/api';\r\n\r\ninterface AuthContextType {\r\n  user: string | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  login: (username: string, password: string) => Promise<boolean>;\r\n  register: (username: string, password: string) => Promise<boolean>;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const response = await authApi.getCurrentUser();\r\n      if (response.success && response.username) {\r\n        setUser(response.username);\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (username: string, password: string): Promise<boolean> => {\r\n    try {\r\n      const response = await authApi.login({ username, password });\r\n      if (response.success) {\r\n        setUser(response.username);\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const register = async (username: string, password: string): Promise<boolean> => {\r\n    try {\r\n      const response = await authApi.register({ username, password });\r\n      if (response.success) {\r\n        setUser(response.username);\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await authApi.logout();\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n    } finally {\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    isLoading,\r\n    login,\r\n    register,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}